name: Create Release Branch and PR

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  HUSKY: 0

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  create-release-branch-and-pr:
    if: github.event.pull_request.merged == true && !startsWith(github.event.pull_request.head.ref, 'release-v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Determine next version
        id: next-version
        run: |
          next_version=$(npx release-it --release-version)
          echo "Next version: $next_version"
          echo "version=$next_version" >> $GITHUB_OUTPUT

      - name: Create and checkout release branch
        run: |
          git checkout -b release-v${{ steps.next-version.outputs.version }}

      - name: Run release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run release -- --ci --no-git.requireUpstream --no-git.push --no-npm.publish --no-github.release

      - name: Generate changelog
        id: changelog
        run: |
          changelog=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s (%h)" --no-merges)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Push changes and create a PR
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git push -u origin release-v${{ steps.next-version.outputs.version }}
          pr_body="## Release v${{ steps.next-version.outputs.version }}

          This PR prepares the release for version ${{ steps.next-version.outputs.version }}.

          ### üöÄ Changes

          ${{ steps.changelog.outputs.changelog }}

          ### üìù Notes for Reviewers

          - Please review the changes carefully, especially any breaking changes.
          - Ensure all tests are passing and the build is successful.
          - Check if the documentation has been updated appropriately.

          ### üìã Checklist

          - [ ] Version number in package.json is correct
          - [ ] CHANGELOG.md has been updated
          - [ ] All tests are passing
          - [ ] Documentation has been updated (if necessary)

          Once this PR is approved and merged, it will trigger the release process."
          
          pr_url=$(gh pr create --title "chore: release v${{ steps.next-version.outputs.version }}" --body "$pr_body" --base main --head release-v${{ steps.next-version.outputs.version }})
          echo "Created PR: $pr_url"